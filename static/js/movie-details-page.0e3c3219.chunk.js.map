{"version":3,"file":"static/js/movie-details-page.0e3c3219.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/AdditionalInfo/AdditionalInfo.styled.js","components/AdditionalInfo/AdditionalInfo.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieInfo = styled.div`\n  padding: 30px;\n  font-weight: 500;\n  color: #2a363b;\n  font-size: 16px;\n  max-width: 500px;\n`;\n\nexport const MovieImage = styled.img`\n  max-width: 300px;\n`;\n\nexport const MovieDetails = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfoTitle = styled.div`\n  font-weight: 700;\n  font-size: 18px;\n`;\n","import PropTypes from 'prop-types';\nimport noPoster from '../../images/imdbnoimage.jpeg';\n\nimport {\n  MovieInfo,\n  MovieImage,\n  MovieDetails,\n  MovieInfoTitle,\n} from './MovieCard.styled';\n\nexport default function MovieCard({ data }) {\n  const { img, title, vote_average, overview, genres, release_date } = data;\n\n  return (\n    <MovieDetails>\n      <MovieImage\n        src={img ? `https://image.tmdb.org/t/p/w500/${img}` : noPoster}\n        alt={title}\n      />\n      <MovieInfo>\n        <MovieInfoTitle>Vote average:</MovieInfoTitle>\n        <p>{vote_average}</p>\n        <MovieInfoTitle>Overview:</MovieInfoTitle>\n        <p>{overview}</p>\n        <MovieInfoTitle>Genres:</MovieInfoTitle>\n        <p>{genres.map(el => el.name).join(', ')}</p>\n        <MovieInfoTitle>Release date:</MovieInfoTitle>\n        <p>{release_date}</p>\n      </MovieInfo>\n    </MovieDetails>\n  );\n}\n\nMovieCard.propTypes = {\n  data: PropTypes.shape({\n    img: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.object.isRequired),\n  }),\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavigationLink = styled(NavLink)`\n  display: inline-block;\n  text-decoration: none;\n  padding: 12px;\n  font-weight: 500;\n  color: #2a363b;\n  font-size: 16px;\n\n  &.active {\n    color: skyblue;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { NavigationLink } from './AdditionalInfo.styled';\n\nexport default function AdditionalInfo({ backLocation }) {\n  return (\n    <>\n      <hr />\n      <h4>Additional information</h4>\n      <NavigationLink to={`cast`} state={{ backLocation }}>\n        Cast\n      </NavigationLink>\n      <NavigationLink to={`reviews`} state={{ backLocation }}>\n        Reviews\n      </NavigationLink>\n    </>\n  );\n}\n\nAdditionalInfo.propTypes = {\n  backLocation: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  margin-bottom: 20px;\n  padding: 5px 10px;\n  background-color: skyblue;\n  color: black;\n  border: none;\n\n  &:hover {\n    background-color: #2196f3;\n    color: white;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../services/api';\nimport MovieCard from 'components/MovieCard';\nimport AdditionalInfo from 'components/AdditionalInfo';\nimport { Button } from './MovieDetails.styled';\nimport Notiflix from 'notiflix';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backLocation = location?.state?.backLocation;\n\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    API.getMovieDetails(movieId)\n      .then(response => {\n        const {\n          poster_path,\n          title,\n          name,\n          vote_average,\n          overview,\n          genres,\n          backdrop_path,\n          release_date,\n        } = response;\n\n        const movieDetails = {\n          img: poster_path ?? backdrop_path,\n          title: title ?? name,\n          vote_average,\n          overview,\n          genres,\n          release_date,\n        };\n\n        setMovie(movieDetails);\n      })\n      .catch(error => {\n        Notiflix.Notify.warning('Sorry, there are no details about this film');\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {movie ? (\n        <>\n          <Button type=\"button\" onClick={() => navigate(backLocation ?? '/')}>\n            Go back\n          </Button>\n          <div>\n            <MovieCard data={movie} />\n            <AdditionalInfo backLocation={backLocation} />\n          </div>\n\n          <Outlet />\n        </>\n      ) : (\n        <Button type=\"button\" onClick={() => navigate(backLocation ?? '/')}>\n          Go back\n        </Button>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst ApiKey = '71232cc02b0a0eb890148f92fc2f7287';\n\nexport async function getTrending() {\n  const response = await axios.get(`trending/all/day?api_key=${ApiKey}`);\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(`movie/${id}?api_key=${ApiKey}`);\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${ApiKey}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${ApiKey}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieByQuery(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${ApiKey}&query=${query}&page=1`\n  );\n  return response.data;\n}\n"],"names":["MovieInfo","styled","MovieImage","MovieDetails","MovieInfoTitle","MovieCard","data","img","title","vote_average","overview","genres","release_date","src","noPoster","alt","map","el","name","join","NavigationLink","NavLink","AdditionalInfo","backLocation","to","state","Button","movieId","useParams","location","useLocation","navigate","useNavigate","useState","movie","setMovie","useEffect","API","then","response","poster_path","backdrop_path","catch","error","Notiflix","type","onClick","axios","ApiKey","getTrending","getMovieDetails","id","getMovieCast","getMovieReviews","getMovieByQuery","query"],"sourceRoot":""}