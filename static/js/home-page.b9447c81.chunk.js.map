{"version":3,"file":"static/js/home-page.b9447c81.chunk.js","mappings":"uPAGaA,EAAkBC,EAAAA,GAAAA,GAAH,6CAIfC,EAAgBD,EAAAA,GAAAA,GAAH,+EAMbE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,gF,SCTP,SAASI,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAE5BC,EAAY,CAChBC,cAFeC,EAAAA,EAAAA,OAKjB,OACE,SAACT,EAAD,UACGM,EAAOI,KAAI,SAAAC,GAAK,OACf,SAACT,EAAD,WACE,SAACC,EAAD,CAAWS,GAAE,kBAAaD,EAAME,IAAMC,MAAOP,EAA7C,SACGI,EAAMI,QAFSJ,EAAME,S,cCTnB,SAASG,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAkBC,MAAK,YAAkB,IACjCC,EADgC,EAAdC,QACMb,KAAI,gBAAGK,EAAH,EAAGA,KAAMS,EAAT,EAASA,MAAT,MAA0B,CAC1DT,KAAI,OAAEA,QAAF,IAAEA,EAAAA,EAAQS,EACdX,GAFgC,EAAgBA,OAIlDK,EAAUI,QAEX,KAGD,iCACE,2CACChB,IAAU,SAACD,EAAD,CAAWC,OAAQA,S,0MClBpCmB,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAER,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,mCAAsCC,IADxD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BjB,GAA/B,uFACkBY,IAAAA,IAAA,gBAAmBZ,EAAnB,oBAAiCa,IADnD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA4BlB,GAA5B,uFACkBY,IAAAA,IAAA,gBACZZ,EADY,4BACUa,EADV,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BnB,GAA/B,uFACkBY,IAAAA,IAAA,gBACZZ,EADY,4BACUa,EADV,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBT,IAAAA,IAAA,+BACGC,EADH,kBACmBQ,EADnB,YADlB,cACCN,EADD,yBAIEA,EAASC,MAJX","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/HomePage.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListStyled = styled.ul`\n  list-style: none;\n`;\n\nexport const MovieListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  color: black;\n  &:hover {\n    color: skyblue;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { MovieListStyled, MovieListItem, MovieLink } from './MovieList.styled';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n  const stateData = {\n    backLocation: location,\n  };\n\n  return (\n    <MovieListStyled>\n      {movies.map(movie => (\n        <MovieListItem key={movie.id}>\n          <MovieLink to={`/movies/${movie.id}`} state={stateData}>\n            {movie.name}\n          </MovieLink>\n        </MovieListItem>\n      ))}\n    </MovieListStyled>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport MovieList from 'components/MovieList/MovieList';\nimport * as API from '../services/api';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    API.getTrending().then(({ results }) => {\n      const arrayOfMovies = results.map(({ name, title, id }) => ({\n        name: name ?? title,\n        id,\n      }));\n      setMovies(arrayOfMovies);\n    });\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {movies && <MovieList movies={movies} />}\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst ApiKey = '71232cc02b0a0eb890148f92fc2f7287';\n\nexport async function getTrending() {\n  const response = await axios.get(`trending/all/day?api_key=${ApiKey}`);\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(`movie/${id}?api_key=${ApiKey}`);\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${ApiKey}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${ApiKey}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieByQuery(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${ApiKey}&query=${query}&page=1`\n  );\n  return response.data;\n}\n"],"names":["MovieListStyled","styled","MovieListItem","MovieLink","Link","MovieList","movies","stateData","backLocation","useLocation","map","movie","to","id","state","name","HomePage","useState","setMovies","useEffect","API","then","arrayOfMovies","results","title","axios","ApiKey","getTrending","response","data","getMovieDetails","getMovieCast","getMovieReviews","getMovieByQuery","query"],"sourceRoot":""}